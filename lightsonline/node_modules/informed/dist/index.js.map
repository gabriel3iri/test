{"version":3,"sources":["webpack://informed/webpack/universalModuleDefinition","webpack://informed/webpack/bootstrap","webpack://informed/./src/Context.js","webpack://informed/./src/ObjectMap.js","webpack://informed/./src/FormController.js","webpack://informed/./src/components/Form.js","webpack://informed/./src/hooks/useFormApi.js","webpack://informed/./src/hooks/useFormState.js","webpack://informed/./src/components/Scope.js","webpack://informed/./src/components/ArrayField.js","webpack://informed/./src/HOC/withFormApi.js","webpack://informed/./src/HOC/withFormState.js","webpack://informed/./src/hooks/useFieldApi.js","webpack://informed/./src/hooks/useFieldState.js","webpack://informed/./src/HOC/withFieldState.js","webpack://informed/./src/HOC/withFieldApi.js","webpack://informed/./src/HOC/withRadioGroup.js","webpack://informed/./src/hooks/useField.js","webpack://informed/./src/HOC/asField.js","webpack://informed/./src/components/form-fields/Text.js","webpack://informed/./src/components/form-fields/Radio.js","webpack://informed/./src/components/form-fields/TextArea.js","webpack://informed/./src/components/form-fields/Select.js","webpack://informed/./src/components/form-fields/Option.js","webpack://informed/./src/components/form-fields/Checkbox.js","webpack://informed/./src/components/form-fields/RadioGroup.js","webpack://informed/./src/index.js","webpack://informed/external \"debug\"","webpack://informed/external \"events\"","webpack://informed/external \"lodash/get\"","webpack://informed/external \"lodash/has\"","webpack://informed/external \"lodash/pull\"","webpack://informed/external \"lodash/pullAt\"","webpack://informed/external \"lodash/setWith\"","webpack://informed/external \"lodash/toPath\"","webpack://informed/external \"lodash/unset\"","webpack://informed/external \"lodash/values\"","webpack://informed/external \"react\""],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FormRegisterContext","React","createContext","register","deregister","setValue","setTouched","setError","update","FormStateContext","FormApiContext","getFullField","getValues","GroupContext","debug","Debug","pathToArrayElem","path","pathArray","ldtoPath","Number","isInteger","length","cleanup","obj","pull","arguments","undefined","ldget","Array","isArray","ldpull","every","e","JSON","stringify","ldunset","slice","ObjectMap","ldvalues","ldhas","ldset","delete","index","join","arr","ldpullAt","FormController","_this","options","FormController_classCallCheck","_getPrototypeOf","fields","Map","state","values","touched","errors","pristine","dirty","invalid","submits","_assertThisInitialized","submitForm","reset","updater","EventEmitter","_objectSpread","_this2","field","fieldApi","setValues","getValue","getTouched","getError","getState","getFormState","fieldExists","getInitialValue","notify","concat","set","error","emit","_this3","notifier","forEach","fieldName","toNotify","validate","empty","initialValues","_this4","initialValue","getFormApi","_this5","_this6","dontPreventDefault","preventDefault","res","setFormError","validateFields","has","valid","fieldState","fieldStuff","keepState","Form","props","Form_classCallCheck","Form_possibleConstructorReturn","Form_getPrototypeOf","controller","formApi","on","forceUpdate","onChange","onSubmit","onValueChange","onSubmitFailure","getApi","Component","_this$props","rest","children","render","component","_objectWithoutProperties","formState","external_react_default","a","createElement","Provider","_extends","onReset","content","_this$props2","useFormApi","useContext","useFormState","buildScopedFormApi","scope","Scope_objectSpread","Scope","_ref","formRegister","scopedFormApi","useMemo","scopedRegister","_len","args","_key","apply","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","buildScopedRegister","uuidv4","replace","Math","random","toString","ArrayField","initialKeys","map","_useState2","_slicedToArray","useState","keys","setKeys","remove","newKeys","add","push","_toConsumableArray","withFormApi","forwardRef","ref","Consumer","withFormApi_extends","withFormState","withFormState_extends","buildFieldApi","useFieldApi","buildFieldState","useFieldState","withFieldState","withFieldState_extends","withFieldApi","withFieldApi_extends","withRadioGroup","radioGroupApi","radioGroupState","withRadioGroup_extends","logger","useStateWithGetter","initial","useRef","useField_slicedToArray","setState","current","useField","fieldProps","mask","format","parse","validateOnChange","validateOnBlur","validateOnMount","maskOnBlur","maintainCursor","type","_useStateWithGetter2","setVal","getVal","_useState4","setErr","_useState6","setTouch","_useStateWithGetter4","setCursor","getCursor","_useState8","maskedValue","setMaskedValue","val","maskedVal","target","selectionStart","useLayoutEffect","fullField","selectionEnd","style","border","setTimeout","borderWidth","borderStyle","borderColor","borderImage","shouldUpdate","useField_toConsumableArray","purify","userprops","asField","asField_objectWithoutProperties","_useField","asField_extends","forwardedRef","Text","Text_objectWithoutProperties","onBlur","background","Text_extends","Radio","Radio_objectWithoutProperties","groupValue","groupOnChange","groupOnBlur","Radio_extends","checked","TextArea","TextArea_objectWithoutProperties","TextArea_extends","Select","Select_classCallCheck","Select_getPrototypeOf","handleChange","Select_assertThisInitialized","selectRef","createRef","selected","Select_toConsumableArray","filter","option","multiple","Select_objectWithoutProperties","Select_extends","Option","Option_objectWithoutProperties","Option_extends","Checkbox","Checkbox_objectWithoutProperties","Checkbox_extends","RadioGroup","groupContext","RadioGroup_objectSpread","__webpack_exports__","components_Form","HOC_withFormApi","HOC_withFormState","HOC_withFieldApi","HOC_withFieldState","HOC_withRadioGroup","HOC_asField","hooks_useField","hooks_useFieldApi","hooks_useFieldState","hooks_useFormApi","hooks_useFormState","form_fields_Text","form_fields_Radio","form_fields_TextArea","form_fields_Select","form_fields_Option","form_fields_Checkbox","form_fields_RadioGroup","Text_Text","Radio_Radio","RadioGroup_RadioGroup","TextArea_TextArea","Select_Select","Checkbox_Checkbox","components_Scope","components_ArrayField","require"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"informed\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"informed\"] = factory();\n\telse\n\t\troot[\"informed\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import React from 'react';\n\nconst FormRegisterContext = React.createContext({\n  register: () => {},\n  deregister: () => {},\n  setValue: () => {},\n  setTouched: () => {}, \n  setError: () => {},\n  update: () => {}, \n});\n\nconst FormStateContext = React.createContext({});\nconst FormApiContext = React.createContext({\n  getFullField: () => {},\n  getValues: () => {},\n});\nconst GroupContext = React.createContext();\nconst SelectContext = React.createContext();\n\nexport { FormRegisterContext, FormStateContext, FormApiContext, GroupContext, SelectContext };\n","import ldset from 'lodash/setWith';\nimport ldunset from 'lodash/unset';\nimport ldtoPath from 'lodash/toPath';\nimport ldget from 'lodash/get';\nimport ldhas from 'lodash/has';\nimport ldvalues from 'lodash/values';\nimport ldpullAt from 'lodash/pullAt';\nimport ldpull from 'lodash/pull';\nimport Debug from 'debug';\nconst debug = Debug('informed:ObjMap' + '\\t');\n\nconst pathToArrayElem = (path) => {\n  const pathArray = ldtoPath(path);\n  return Number.isInteger(+pathArray[pathArray.length-1]);\n};\n\nclass ObjectMap {\n  static empty(object) {\n    return ldvalues(object).length === 0;\n  }\n\n  static get(object, path) {\n    return ldget(object, path);\n  }\n\n  static has(object, path) {\n    return ldhas(object, path);\n  }\n\n  static set(object, path, value) {\n    if( value !== undefined ){\n      ldset(object, path, value);\n    } else {\n      // If the path is to an array leaf then we want to set to undefined\n      if( pathToArrayElem(path) && ObjectMap.get(object, path) !== undefined ) {\n        ldset(object, path, undefined);\n        let pathArray = ldtoPath(path);\n        pathArray = pathArray.slice(0, pathArray.length - 1);\n        cleanup(object, pathArray, false);\n      }\n      // Only delete the field if it needs to be deleted and its not a path to an array ( array leaf )\n      else if( !pathToArrayElem(path) && ObjectMap.get(object, path) !== undefined ) ObjectMap.delete(object, path);\n    }\n  }\n\n  static delete(object, path) {\n    debug('DELETE', path);\n    ldunset(object, path);\n    let pathArray = ldtoPath(path);\n    pathArray = pathArray.slice(0, pathArray.length - 1);\n    cleanup(object, pathArray);\n  }\n\n  static pullOut(object, path, index) {\n    // Get the path to the array\n    let pathArray = ldtoPath(path);\n    pathArray = pathArray.slice(0, pathArray.length - 1).join();\n    debug('PathArray', pathArray);\n    // Get the array\n    const arr = ldget(object, pathArray);\n    debug('Array', arr);\n    // Pull out of array\n    ldpullAt(arr, index);\n  }\n}\n\nfunction cleanup(obj, path, pull = true) {\n  // Base case no path left\n  if (path.length === 0) {\n    return;\n  }\n\n  const object = ldget(obj, path);\n\n  // Clean up undefined from array\n  if (Array.isArray(object) && pull) {\n    ldpull(object, undefined);\n  }\n\n  // Delete object if its empty\n  if (\n    Array.isArray(object)\n      ? object.every(e => e == null)\n      : JSON.stringify(object) === '{}'\n  ) {\n    ldunset(obj, path);\n  }\n  // Recur\n  cleanup(obj, path.slice(0, path.length - 1));\n}\n\nexport default ObjectMap;\n","import ObjectMap from './ObjectMap';\nimport { EventEmitter } from 'events';\nimport Debug from 'debug';\nconst debug = Debug('informed:Controller'+'\\t');\n\nclass FormController extends EventEmitter {\n\n\n  constructor(options = {}) {\n\n    // Dont forget to call super! :)\n    super();\n\n    this.options = options;\n\n    // Map will store all fields\n    // Key => fieldName - example: \"foo.bar[3].baz\"\n    // Val => { field, fieldApi }\n    // Why? so the form can control the fields!\n    this.fields = new Map();\n\n    // Initialize the controller state\n    this.state = {\n      values: {},\n      touched: {},\n      errors: {},\n      pristine: true,\n      dirty: false,\n      invalid: false,\n      submits: 0\n    };\n\n    // Bind functions that will be called externally\n    //this.update = this.update.bind(this);\n    this.deregister = this.deregister.bind(this);\n    this.register = this.register.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.setTouched = this.setTouched.bind(this);\n    this.setError = this.setError.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.reset = this.reset.bind(this);\n    this.update = this.update.bind(this);\n\n    // Updater will be used by fields to update and register\n    this.updater = {\n      register: this.register,\n      deregister: this.deregister,\n      setValue: this.setValue, \n      setTouched: this.setTouched, \n      setError: this.setError,\n      update: this.update\n    };\n  }\n\n  // Generate the external form state that will be exposed to the users\n  getFormState() {\n    return {\n      ...this.state, \n      pristine: this.pristine(),\n      dirty: this.dirty(),\n      invalid: this.invalid()\n    };\n  }\n\n  // Generate the external form api that will be exposed to the users\n  getFormApi() {\n    const setValue = (field, value) =>\n      this.fields.get(field).fieldApi.setValue(value);\n\n    const setTouched = (field, value) =>\n      this.fields.get(field).fieldApi.setTouched(value);\n\n    const setError = (field, value) =>\n      this.fields.get(field).fieldApi.setError(value);\n\n    const setValues = values => this.setValues(values);\n\n    const getValue = (field) => this.getValue(field);\n\n    const getTouched = (field) => this.getTouched(field);\n    \n    const getError = (field) => this.getError(field);\n\n    const reset = () => this.reset();\n\n    const submitForm = e => this.submitForm(e);\n\n    const getState = () => this.getFormState();\n\n    const getValues = () => this.getFormState().values;\n\n    const getFullField = field => this.getFullField(field);\n\n    const fieldExists = field => this.fields.get(field) != null;\n\n    const getInitialValue = field => this.getInitialValue(field);\n\n    return {\n      setValue,\n      setTouched,\n      setError,\n      setValues,\n      getValue,\n      getTouched,\n      getError,\n      reset,\n      submitForm,\n      getState,\n      getValues,\n      getFullField,\n      fieldExists,\n      getInitialValue\n    };\n  }\n\n  /* ------------------- Internal Methods ------------------- */\n\n  setValue(field, value, notify = true) {\n    debug(`Setting ${field} to ${value}`);\n    // Set the new value\n    ObjectMap.set(this.state.values, field, value);\n    // The forms values have changed so we want to clear form level error\n    delete this.state.error;\n    // Emit change events\n    this.emit('change');\n    this.emit('value');\n    // Notify other fields \n    if( notify ) this.notify(field);\n  }\n\n  setTouched(field, value) {\n    ObjectMap.set(this.state.touched, field, value);\n    this.emit('change');\n  }\n\n  setError(field, value) {\n    ObjectMap.set(this.state.errors, field, value);\n    this.emit('change');\n  }\n\n  setFormError(value){\n    this.state.error = value;\n    this.emit('change');\n  }\n\n  // Notify other fields \n  notify( field ) {\n    // Get the notifier\n    const notifier =  this.fields.get(field);\n    // If we have a list we must notify each one\n    if( notifier.notify ){\n      notifier.notify.forEach( fieldName =>{\n        // Get the field toNotify\n        const toNotify =  this.fields.get(fieldName);\n        if( toNotify ){\n          debug('Notifying', toNotify.field);\n          const value = this.getValue(toNotify.field);\n          toNotify.fieldApi.validate(value);\n        }\n      });\n    }\n  }\n\n  getValue(field) {\n    return ObjectMap.get(this.state.values, field);\n  }\n\n  getTouched(field) {\n    return ObjectMap.get(this.state.touched, field);\n  }\n\n  getError(field) {\n    return ObjectMap.get(this.state.errors, field);\n  }\n\n  getFullField(field) { \n    return field;\n  }\n\n  valid(){\n    return !!(ObjectMap.empty(this.state.errors) && !this.state.error);\n  }\n\n  invalid() {\n    return !!(!ObjectMap.empty(this.state.errors) || this.state.error);\n  }\n\n  pristine() {\n    return ObjectMap.empty(this.state.touched) && ObjectMap.empty(this.state.values);\n  }\n\n  dirty() {\n    return !this.pristine();\n  }\n\n  getInitialValue( field ){\n    return ObjectMap.get(this.options.initialValues, field);\n  }\n\n  reset() {\n    debug('Resetting');\n    // So we because all fields controll themselves and, \"inform\", this controller\n    // of their changes, we need to literally itterate through all registered fields\n    // and reset them. Not a big deal but very important to remember that you cant simply\n    // reset this controllers state!\n    this.fields.forEach(( field )=>{\n      field.fieldApi.reset();\n      // Initialize the values if it needs to be\n      const initialValue = ObjectMap.get(this.options.initialValues, field.field);\n      if( initialValue !== undefined ){\n        this.getFormApi().setValue( field.field, initialValue );\n      } \n    });\n\n    this.emit('change');\n  }\n\n  setValues(values){\n    debug('Setting values');\n    // So we because all fields controll themselves and, \"inform\", this controller\n    // of their changes, we need to literally itterate through all registered fields\n    // and set them. Not a big deal but very important to remember that you cant simply\n    // set this controllers state!\n    this.fields.forEach(( field )=>{\n      // Initialize the values if it needs to be\n      const value = ObjectMap.get(values, field.field);\n      if( value ){\n        this.getFormApi().setValue( field.field, value );\n      } \n    });\n\n    this.emit('change');\n  }\n\n  submitForm(e) {\n\n    // Incriment number of submit attempts\n    this.state.submits = this.state.submits + 1;\n\n    if( !this.options.dontPreventDefault && e ){\n      // Prevent default browser form submission\n      e.preventDefault(e);\n    }\n\n    // Itterate through and call validate on every field\n    this.fields.forEach(( field, key )=>{\n      const value = this.getValue(key);\n      field.fieldApi.validate(value);\n      field.fieldApi.setTouched(true);\n    });\n\n    // Call the form level validation if its present\n    if( this.options.validate ){\n      const res = this.options.validate( this.state.values );\n      this.setFormError(res);\n    }\n\n    // Call the forms field level validation\n    if( this.options.validateFields ){\n      const errors = this.options.validateFields( this.state.values );\n      // So we because all fields controll themselves and, \"inform\", this controller\n      // of their changes, we need to literally itterate through all registered fields\n      // and set them. Not a big deal but very important to remember that you cant simply\n      // set this controllers state!\n      this.fields.forEach(( field )=>{\n        // Check to see if there is an error to set \n        // Note: we use has becuause value may be there but undefined\n        if( ObjectMap.has(errors, field.field ) ){\n          const error = ObjectMap.get(errors, field.field);\n          // If there is an error then set it\n          this.getFormApi().setError( field.field, error );\n        } \n      });\n\n    }\n\n    // Emit a change \n    this.emit('change');\n\n    // Check validity and perform submission if valid\n    if( this.valid() ){\n      debug('Submit', this.state);\n      this.emit('submit');\n    } else {\n      debug('Submit', this.state);\n      this.emit('failure');\n    }\n  }\n\n  /* ---------------- Updater Functions (used by fields) ---------------- */\n\n  register(field, fieldState, fieldStuff) {\n    debug('Register', field, fieldState);\n    // Always register the field\n    this.fields.set(field, fieldStuff);\n    // Initialize state\n    // When a user had keep state load existing values\n    if( fieldStuff.keepState ){\n      const value = ObjectMap.get(this.state.values, field);\n      const initialValue = ObjectMap.get(this.options.initialValues, field);\n      // If we have a defined value then set that\n      if( value !== undefined ) {\n        this.getFormApi().setValue( field, value || fieldState.value );\n      }\n      // Otherwise we want to use the initial value \n      else if( initialValue !== undefined ){\n        this.getFormApi().setValue( field, initialValue );\n      } else { \n        // Otherwise set the value to whatever the field is set to ( might have been field level initial value )\n        this.setValue(field, fieldState.value, false);\n      }\n      // Finnally we set touched\n      const touched = ObjectMap.get(this.state.touched, field);\n      this.getFormApi().setTouched( field, touched );\n      // Error will get set by validator implicitly so we dont need to remember that\n    } else {\n      // Initialize the values if it needs to be\n      const initialValue = ObjectMap.get(this.options.initialValues, field);\n      if( initialValue !== undefined ){\n        this.getFormApi().setValue( field, initialValue );\n      } else { \n        // Otherwise set the value to whatever the field is set to ( might have been field level initial value )\n        this.setValue(field, fieldState.value, false);\n      }\n      this.setTouched(field, fieldState.touched);\n    }\n    this.setError(field, fieldState.error);\n\n  }\n\n  deregister(field) {\n    debug('Deregister', field);\n    const field2remove = this.fields.get(field);\n    if(!field2remove.keepState){\n      // Remove the data!\n      ObjectMap.delete(this.state.values, field);\n      ObjectMap.delete(this.state.touched, field);\n      ObjectMap.delete(this.state.errors, field);\n    }\n    // Always need to delete the field\n    this.fields.delete(field);\n    this.emit('change');\n  }\n\n  update(field, fieldStuff) {\n    debug('Update', field);\n    this.fields.set(field, fieldStuff);\n  }\n}\n\nexport default FormController;\n","import React, { useMemo } from 'react';\nimport { FormStateContext, FormApiContext, FormRegisterContext } from '../Context';\nimport FormController from '../FormController';\nimport Debug from 'debug';\nconst debug = Debug('informed:Form' + '\\t\\t');\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.controller = new FormController({\n      dontPreventDefault: props.dontPreventDefault, \n      initialValues: props.initialValues,\n      validate: props.validate,\n      validateFields: props.validateFields\n    });\n    this.formApi = this.controller.getFormApi();\n    this.controller.on('change', () => this.forceUpdate());\n    this.controller.on('change', () => this.props.onChange && this.props.onChange( this.controller.getFormState() ));\n    this.controller.on('submit', () => this.props.onSubmit && this.props.onSubmit( this.controller.getFormState().values ) );\n    this.controller.on('value', () => this.props.onValueChange && this.props.onValueChange( this.controller.getFormState().values ) );\n    this.controller.on('failure', () => this.props.onSubmitFailure && this.props.onSubmitFailure( this.controller.getFormState().errors ) );\n    if (this.props.getApi) {\n      this.props.getApi(this.controller.getFormApi());\n    }\n  }\n\n  get content() {\n    const { children, component, render } = this.props;\n\n    const props = {\n      formState: this.controller.getFormState(),\n      formApi: this.controller.getFormApi()\n    };\n\n    if (component) {\n      return React.createElement(component, props, children);\n    }\n    if (render) {\n      return render(props);\n    }\n    if (typeof children === 'function') {\n      return children(props);\n    }\n    return children;\n  }\n\n  render() {\n    debug('Render FORM');\n    /* ----------- Destructure props ----------- */\n    const { \n      children, \n      getApi, \n      onChange, \n      onSubmit, \n      onValueChange, \n      initialValues,\n      onSubmitFailure,\n      render,\n      validate,\n      validateFields,\n      component,\n      dontPreventDefault, ...rest } = this.props;\n\n    const formState = this.controller.getFormState();\n\n    /* --- Create Provider and render Content --- */\n    return (\n      <FormRegisterContext.Provider value={this.controller.updater}>\n        <FormApiContext.Provider value={this.formApi}>\n          <FormStateContext.Provider value={formState}>\n            <form\n              {...rest}\n              onReset={this.controller.reset}\n              onSubmit={this.controller.submitForm}>\n              {this.content}\n            </form>\n          </FormStateContext.Provider>\n        </FormApiContext.Provider>\n      </FormRegisterContext.Provider>\n    );\n  }\n}\n\nexport default Form;\n","import React, { useContext } from 'react';\nimport { FormApiContext } from '../Context';\n\nfunction useFormApi() {\n  const formApi = useContext(FormApiContext);\n  return formApi;\n}\n\nexport default useFormApi;\n","import React, { useContext } from 'react';\nimport { FormStateContext } from '../Context';\n\nfunction useFormState() {\n  const formState = useContext(FormStateContext);\n  return formState;\n}\n\nexport default useFormState;\n","import React, { useContext, useMemo } from 'react';\nimport { FormRegisterContext, FormStateContext, FormApiContext } from '../Context';\nimport useFormApi from '../hooks/useFormApi';\nimport useFormState from '../hooks/useFormState';\n\nconst buildScopedFormApi = ( scope, formApi ) => {\n  return {\n    ...formApi,\n    getValue: field => formApi.getValue(`${scope}.${field}`),\n    getTouched: field => formApi.getTouched(`${scope}.${field}`),\n    getError: field => formApi.getError(`${scope}.${field}`),\n    setValue: (field, value) => formApi.setValue(`${scope}.${field}`, value),\n    setTouched: (field, value) => formApi.setTouched(`${scope}.${field}`, value),\n    setError: (field, value) => formApi.setError(`${scope}.${field}`, value),\n    getFullField: field => `${formApi.getFullField(scope)}.${field}`\n  }; \n};\n\nconst buildScopedRegister = ( scope, formRegister ) => {\n\n  const { register, deregister, setValue, setTouched, setError, update } = formRegister;\n\n  return {\n    register: ( field, ...args ) => register(`${scope}.${field}`, ...args),\n    deregister: ( field, ...args ) => deregister(`${scope}.${field}`, ...args),\n    update: ( field, ...args ) => update(`${scope}.${field}`, ...args),\n    setValue: ( field, ...args ) => setValue(`${scope}.${field}`, ...args),\n    setTouched: ( field, ...args ) => setTouched(`${scope}.${field}`, ...args),\n    setError: ( field, ...args ) => setError(`${scope}.${field}`, ...args),\n  }; \n};\n\nconst Scope = ({scope, children}) => {\n\n  const formRegister = useContext(FormRegisterContext);\n  const formApi = useFormApi();\n  const formState = useFormState();\n\n  // VERY important to memoize the builders!\n  const scopedFormApi = useMemo(() => buildScopedFormApi(scope, formApi), [scope]);\n  const scopedRegister = useMemo(() => buildScopedRegister(scope, formRegister), [scope]);\n\n  scopedFormApi;\n\n  return (\n    <FormRegisterContext.Provider value={scopedRegister}>\n      <FormApiContext.Provider value={scopedFormApi}>\n        <FormStateContext.Provider value={formState}>\n          {children}\n        </FormStateContext.Provider>\n      </FormApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n\n};\n\nexport default Scope;\n","import React, { useState } from 'react';\nimport useFormApi from '../hooks/useFormApi';\n\n// https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\nconst uuidv4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nconst ArrayField = ({ field, children, initialValue }) => {\n\n  const formApi = useFormApi();\n\n  const initialValues = formApi.getInitialValue(field) || initialValue;\n\n  // TODO throw error if initial value and its not array\n\n  const initialKeys = initialValues ? initialValues.map(() => uuidv4()) : [];\n\n  const [keys, setKeys] = useState(initialKeys);\n\n  const remove = i => {\n    const newKeys = keys.slice(0, i).concat(keys.slice(i + 1, keys.length));\n    setKeys(newKeys);\n  };\n\n  const add = () => {\n    keys.push(uuidv4());\n    setKeys([...keys]);\n  };\n\n  const fields = keys.map((key, i) => ({\n    key,\n    field: `${field}[${i}]`,\n    remove: () => remove(i),\n    initialValue: initialValues && initialValues[i]\n  }));\n\n  return children({ fields, add });\n};\n\nexport default ArrayField;\n","import React from 'react';\nimport { FormApiContext } from '../Context';\n\nconst withFormApi = Component =>\n  React.forwardRef((props, ref) => (\n    <FormApiContext.Consumer>\n      {(formApi) => <Component formApi={formApi} ref={ref} {...props} />}\n    </FormApiContext.Consumer>\n  ));\n\nexport default withFormApi;\n","import React from 'react';\nimport { FormStateContext } from '../Context';\n\nconst withFormState = Component =>\n  React.forwardRef((props, ref) => (\n    <FormStateContext.Consumer>\n      {(formState) => (\n        <Component formState={formState} ref={ref} {...props} />\n      )}\n    </FormStateContext.Consumer>\n  ));\n\nexport default withFormState;\n","import React, { useMemo } from 'react';\nimport useFormApi from './useFormApi';\n\nconst buildFieldApi = (formApi, field) => {\n  return { \n    getValue: () => formApi.getValue(field),\n    setValue: value => formApi.setValue(field, value),\n    getTouched: () => formApi.getTouched(field),\n    setTouched: value => formApi.setTouched(field, value),\n    getError: () => formApi.getError(field),\n    setError: value => formApi.setError(field, value),\n  };\n};\n\nfunction useFieldApi( field ) {\n  const formApi = useFormApi();\n  const fieldApi = useMemo( () => buildFieldApi( formApi, field), [field] );\n  return fieldApi;\n}\n\nexport default useFieldApi;\n","import React from 'react';\nimport useFieldApi from './useFieldApi';\nimport useFormState from './useFormState';\n\nconst buildFieldState = (fieldApi) => {\n  return {\n    value: fieldApi.getValue(),\n    touched: fieldApi.getTouched(),\n    error: fieldApi.getError(),\n  };\n};\n\nfunction useFieldState( field ) {\n  const fieldApi = useFieldApi(field);\n  // TODO find better way to get this to rerender\n  const formState = useFormState();\n  // The above is a temp hack\n  const fieldState = buildFieldState(fieldApi);\n  return fieldState;\n}\n\nexport default useFieldState;\n","import React from 'react';\nimport useFieldState from '../hooks/useFieldState';\n\nconst withFieldState = field => Component => props => {\n  const fieldState = useFieldState(field);\n  return <Component fieldState={fieldState} {...props} />;\n};\n\nexport default withFieldState;","import React from 'react';\nimport useFieldApi from '../hooks/useFieldApi';\n\nconst withFieldApi = field => Component => (props) => {\n  const fieldApi = useFieldApi( field );\n  return <Component fieldApi={fieldApi} {...props} />;\n};\n\nexport default withFieldApi;\n","import React from 'react';\nimport { GroupContext } from '../Context';\n\nconst withRadioGroup = Component =>\n  React.forwardRef((props, ref) => (\n    <GroupContext.Consumer>\n      {({ radioGroupApi, radioGroupState }) => (\n        <Component\n          radioGroupApi={radioGroupApi}\n          radioGroupState={radioGroupState}\n          ref={ref}\n          {...props}\n        />\n      )}\n    </GroupContext.Consumer>\n  ));\n\nexport default withRadioGroup;\n","import React, { useState, useLayoutEffect, useEffect, useContext, useMemo, useRef } from 'react';\nimport { FormRegisterContext } from '../Context';\nimport useFormApi from './useFormApi';\nimport Debug from 'debug';\nconst logger = Debug('informed:useField'+ '\\t');\n\n// TODO figure out if this is bad? \n// https://github.com/facebook/react/issues/14543\nfunction useStateWithGetter(initial) {\n  const ref = useRef();\n  const [state, setState] = useState(initial);\n  ref.current = state;\n  const set = (value) => {\n    ref.current = value;\n    setState(value);\n  };\n  const get = () => {\n    return ref.current;\n  };\n  return [state, set, get];\n}\n\nfunction useField(field, fieldProps = {}) {\n  // Pull props off of field props\n  const { \n    validate,\n    mask,\n    format,\n    parse,\n    initialValue,\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    maskOnBlur,\n    onValueChange,\n    notify,\n    keepState, \n    maintainCursor,\n    debug, \n    type\n  } = fieldProps;\n\n  // Initialize state \n  const [value, setVal, getVal] = useStateWithGetter(initialValue != null ? initialValue : undefined);\n  const [error, setErr] = useState( validateOnMount ? validate(initialValue) : undefined );\n  const [touched, setTouch] = useState();\n  const [cursor, setCursor, getCursor] = useStateWithGetter(0);\n  const [maskedValue, setMaskedValue ] = useState(value);\n\n  // Grab the form register context\n  const updater = useContext(FormRegisterContext);\n\n  // Grab the form state\n  const formApi = useFormApi();\n\n  /* ---------------------- Setters ---------------------- */\n\n  // Define set error\n  const setError = (val) => { \n    setErr(val);\n    updater.setError(field, val);\n  };\n\n  // Define set value\n  const setValue = (val, e) => {\n    logger(`Setting ${field} to ${val}`);\n    // Initialize maked value\n    let maskedVal = val;\n    // Set value to undefined if its an empty string\n    if( val === '' ){\n      val = undefined;\n    }\n    // Turn string into number for number fields\n    if(type === 'number' && val !== undefined ){\n      val = +val;\n    }\n    // Call mask if it was passed\n    if(mask && !maskOnBlur){\n      maskedVal = mask(val);\n      val = mask(val);\n    }\n    // Call format and parse if they were passed\n    if(format && parse){\n      val = parse(val);\n      maskedVal = format(val);\n    }\n    // We only need to call validate if the user gave us one\n    // and they want us to validate on change\n    if (validate && validateOnChange) {\n      logger(`Validating after change ${field} ${val}`);\n      setError(validate(val, formApi.getValues()));\n    }\n    // Remember Cursor position!\n    if(e && e.target && e.target.selectionStart ){\n      setCursor(e.target.selectionStart);\n    }\n\n    // Now we update the value\n    setVal(val);\n    setMaskedValue(maskedVal);\n    // If the user passed in onValueChange then call it!\n    if( onValueChange ){\n      onValueChange(val);\n    }    \n    // Call the updater\n    updater.setValue(field, val);\n  };\n\n  // Define set touched\n  const setTouched = ( val, reset ) => {\n    // We only need to call validate if the user gave us one\n    // and they want us to validate on blur\n    if (validate && validateOnBlur && !reset ) {\n      logger(`Validating after blur ${field} ${getVal()}`);\n      setError(validate(getVal(), formApi.getValues()));\n    }\n    // Call mask if it was passed\n    if(mask && maskOnBlur){\n      const maskedVal = mask( getVal() );\n      // Now we update the value\n      setVal(maskedVal);\n      setMaskedValue(maskedVal);\n      // If the user passed in onValueChange then call it!\n      if( onValueChange ){\n        onValueChange(maskedVal);\n      }    \n      // Call the updater\n      updater.setValue(field, maskedVal);\n    }\n    setTouch(val);\n    updater.setTouched(field, val);\n  };\n\n  // Define reset\n  const reset = () => {\n    // TODO support numbers\n    setValue(initialValue != null ? initialValue : undefined);\n    // Setting somthing to undefined will remove it \n    setError(validateOnMount ? validate(initialValue) : undefined);\n    setTouched(undefined, true);\n  };\n\n  // Define validate\n  const fieldValidate = (val) => {\n    if( validate ){\n      logger(`Field validating ${field} ${val}`);\n      setError(validate(val, formApi.getValues()));\n    }\n  };\n\n  /* ----------------- Field Api && State ----------------- */\n\n  // Build the field api\n  const fieldApi = {\n    setValue,\n    setTouched,\n    setError,\n    reset, \n    validate: fieldValidate\n  };\n\n  // Build the field state\n  const fieldState = {\n    value,\n    error,\n    touched,\n    maskedValue\n  };\n\n  logger('Render', formApi.getFullField(field), fieldState);\n\n  const ref = useRef(null);\n\n  // We want to register and deregister this field when field name changes\n  useLayoutEffect(\n    () => {\n      const fullField = formApi.getFullField(field);\n      logger('Register', fullField);\n      updater.register(field, fieldState, { field: fullField, fieldApi, fieldState, notify, keepState });\n\n      return () => {\n        logger('Deregister', fullField);\n        updater.deregister(field);\n      };\n    },\n    // This is VERYYYY!! Important!\n    [field]\n  );\n\n  // We want to let the controller know of changes on this field when specific props change\n  useLayoutEffect(\n    () => {\n      const fullField = formApi.getFullField(field);\n      logger('Update', field);\n      updater.update(field, { field: fullField, fieldApi, fieldState, notify, keepState });\n    },\n    // This is VERYYYY!! Important!\n    [validate, validateOnChange, validateOnBlur, onValueChange]\n  );\n\n  // Maintain cursor position\n  useLayoutEffect(\n    () => {\n      if ( maintainCursor && ref.current != null && getCursor()) ref.current.selectionEnd = getCursor();\n    },\n    [value]\n  );\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && ref) {\n        ref.current.style.border = '5px solid orange';\n        setTimeout(() => {\n          ref.current.style.borderWidth ='2px';\n          ref.current.style.borderStyle = 'inset';\n          ref.current.style.borderColor = 'initial';\n          ref.current.style.borderImage = 'initial';\n        }, 500);\n      }\n    }\n  );\n\n  // This is an awesome optimization!!\n  const shouldUpdate = [ ...Object.values(fieldState), ...Object.values(fieldProps), field ];\n\n  const purify = (children, userprops = []) => useMemo(() => children, [ ...shouldUpdate, ...userprops]);\n\n  return { fieldState, fieldApi, purify, ref };\n\n}\n\nexport default useField;\n","import React from 'react';\nimport useField from '../hooks/useField';\n\nconst asField = Component => props => {\n  const { \n    field, \n    validate, \n    initialValue, \n    validateOnChange, \n    validateOnBlur,\n    validateOnMount,\n    maskOnBlur,\n    onValueChange,\n    notify,\n    keepState,\n    maintainCursor,\n    debug,\n    type,\n    mask,\n    format,\n    parse,\n    ...rest } = props;\n  const fieldProps = {\n    validate,\n    initialValue, \n    validateOnChange, \n    validateOnBlur,\n    onValueChange,\n    validateOnMount,\n    maskOnBlur,\n    notify,\n    keepState,\n    maintainCursor,\n    debug,\n    type,\n    mask,\n    format,\n    parse\n  };\n\n  const { fieldState, fieldApi, purify, ref } = useField(field, fieldProps);\n   \n  return purify(\n    <Component\n      fieldApi={fieldApi}\n      fieldState={fieldState}\n      field={field}\n      forwardedRef={ref}\n      debug={debug}\n      type={type}\n      {...rest}\n    />, \n    Object.values(rest)\n  );\n};\n\nexport default asField;\n","import React, {useLayoutEffect} from 'react';\nimport asField from '../../HOC/asField';\nimport Debug from 'debug';\nconst logger = Debug('informed:Text' + '\\t');\n\nconst Text = ({ fieldApi, fieldState, ...props }) => {\n  const { maskedValue } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    debug,\n    ...rest\n  } = props;\n\n  logger('Render', field);\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && forwardedRef) {\n        forwardedRef.current.style.background = 'red';\n        setTimeout(() => {\n          forwardedRef.current.style.background = 'white';\n        }, 500);\n      }\n    }\n  );\n\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={!maskedValue && maskedValue !== 0 ? '' : maskedValue}\n      onChange={e => {\n        setValue(e.target.value, e );\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n    />\n  );\n};\n\nexport { Text as BasicText };\n\nexport default asField(Text);\n","import React from 'react';\nimport withRadioGroup from '../../HOC/withRadioGroup';\n\nconst Radio = ({ radioGroupApi, radioGroupState, ...props }) => {\n  const { value: groupValue } = radioGroupState;\n  const {\n    setValue,\n    setTouched,\n    onChange: groupOnChange,\n    onBlur: groupOnBlur\n  } = radioGroupApi;\n  const {\n    value,\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    ...rest\n  } = props;\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={value}\n      checked={groupValue === value}\n      onChange={e => {\n        if (!e.target.checked) {\n          return;\n        }\n        setValue(value);\n        if (onChange) {\n          onChange(e);\n        }\n        if (groupOnChange) {\n          groupOnChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n        if (groupOnBlur) {\n          groupOnBlur(e);\n        }\n      }}\n      type=\"radio\"\n    />\n  );\n};\n\nexport { Radio as BasicRadio };\n\nexport default withRadioGroup(Radio);\n","import React, { useLayoutEffect } from 'react';\nimport asField from '../../HOC/asField';\n\nconst TextArea = ({ fieldApi, fieldState, ...props }) => {\n  const { maskedValue } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    debug,\n    ...rest\n  } = props;\n\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && forwardedRef) {\n        forwardedRef.current.style.background = 'red';\n        setTimeout(() => {\n          forwardedRef.current.style.background = 'white';\n        }, 500);\n      }\n    }\n  );\n\n  return (\n    <textarea\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={!maskedValue ? '' : maskedValue}\n      onChange={e => {\n        setValue(e.target.value, e);\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n    />\n  );\n};\n\nexport { TextArea as BasicTextArea };\n\nexport default asField(TextArea);\n","import React, { useLayoutEffect } from 'react';\nimport asField from '../../HOC/asField';\n\nclass Select extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.selectRef = React.createRef();\n  }\n\n  handleChange(e) {\n    let selected = [...(this.props.forwardedRef || this.selectRef).current]\n      .filter(option => option.selected)\n      .map(option => option.value);\n\n    this.props.fieldApi.setValue(\n      this.props.multiple ? selected : selected[0] || ''\n    );\n\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  // for debugging\n  componentDidUpdate(){\n    if (this.props.debug && this.props.forwardedRef) {\n      this.props.forwardedRef.current.style.background = 'red';\n      setTimeout(() => {\n        this.props.forwardedRef.current.style.background = 'white';\n      }, 500);\n    }\n  }\n\n  render() {\n    const { fieldApi, fieldState, ...props } = this.props;\n    const { value } = fieldState;\n    const { setValue, setTouched } = fieldApi;\n    const {\n      onChange,\n      onBlur,\n      field,\n      initialValue,\n      forwardedRef,\n      debug,\n      children,\n      multiple,\n      ...rest\n    } = props;\n\n    return (\n      <select\n        {...rest}\n        multiple={multiple}\n        name={field}\n        ref={forwardedRef || this.selectRef}\n        value={value || (multiple ? [] : '')}\n        onChange={this.handleChange}\n        onBlur={e => {\n          setTouched(true);\n          if (onBlur) {\n            onBlur(e);\n          }\n        }}>\n        {children}\n      </select>\n    );\n  }\n}\n\nexport { Select as BasicSelect };\n\nexport default asField(Select);\n","import React from 'react';\n\nconst Option = ({ value, forwardedRef, children, ...rest }) => {\n  return (\n    <option ref={forwardedRef} value={value} key={value} {...rest}>\n      {children}\n    </option>\n  );\n};\n\nexport default Option;\n","import React, { useLayoutEffect } from 'react';\nimport asField from '../../HOC/asField';\n\nconst Checkbox = ({ fieldApi, fieldState, ...props }) => {\n  const { value } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    debug,\n    forwardedRef,\n    ...rest\n  } = props;\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      checked={!!value}\n      onChange={e => {\n        setValue(e.target.checked);\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n      type=\"checkbox\"\n    />\n  );\n};\n\nexport { Checkbox as BasicCheckbox };\n\nexport default asField(Checkbox);\n","import React, { Component } from 'react';\nimport { GroupContext } from '../../Context';\n\nimport asField from '../../HOC/asField';\n\nclass RadioGroup extends Component {\n  get groupContext() {\n    return {\n      radioGroupApi: {\n        ...this.props.fieldApi,\n        onChange: this.props.onChange,\n        onBlur: this.props.onBlur\n      },\n      radioGroupState: this.props.fieldState\n    };\n  }\n\n  render() {\n    return (\n      <GroupContext.Provider value={this.groupContext}>\n        {this.props.children}\n      </GroupContext.Provider>\n    );\n  }\n}\n\nexport { RadioGroup as BasicRadioGroup };\n\nexport default asField(RadioGroup);\n","import Form from './components/Form';\nimport Scope from './components/Scope';\nimport ArrayField from './components/ArrayField';\n\nimport withFormApi from './HOC/withFormApi';\nimport withFormState from './HOC/withFormState';\nimport withFieldState from './HOC/withFieldState';\nimport withFieldApi from './HOC/withFieldApi';\nimport withRadioGroup from './HOC/withRadioGroup';\nimport asField from './HOC/asField';\n\nimport useField from './hooks/useField';\nimport useFieldApi from './hooks/useFieldApi';\nimport useFieldState from './hooks/useFieldState';\nimport useFormApi from './hooks/useFormApi';\nimport useFormState from './hooks/useFormState';\n\nimport Text from './components/form-fields/Text';\nimport Radio from './components/form-fields/Radio';\nimport TextArea from './components/form-fields/TextArea';\nimport Select from './components/form-fields/Select';\nimport Option from './components/form-fields/Option';\nimport Checkbox from './components/form-fields/Checkbox';\nimport RadioGroup from './components/form-fields/RadioGroup';\n\nimport { BasicText } from './components/form-fields/Text';\nimport { BasicRadio } from './components/form-fields/Radio';\nimport { BasicRadioGroup } from './components/form-fields/RadioGroup';\nimport { BasicTextArea } from './components/form-fields/TextArea';\nimport { BasicSelect } from './components/form-fields/Select';\nimport { BasicCheckbox } from './components/form-fields/Checkbox';\n\nexport {\n  Form,\n  withFormApi,\n  withFormState,\n  withFieldApi,\n  withFieldState,\n  withRadioGroup,\n  asField,\n  useField,\n  useFieldApi,\n  useFieldState,\n  useFormApi,\n  useFormState,\n  Text,\n  Radio,\n  TextArea,\n  Select,\n  Option,\n  Checkbox,\n  RadioGroup,\n  BasicText,\n  BasicRadio,\n  BasicRadioGroup,\n  BasicTextArea,\n  BasicSelect,\n  BasicCheckbox,\n  Scope,\n  ArrayField\n};\n","module.exports = require(\"debug\");","module.exports = require(\"events\");","module.exports = require(\"lodash/get\");","module.exports = require(\"lodash/has\");","module.exports = require(\"lodash/pull\");","module.exports = require(\"lodash/pullAt\");","module.exports = require(\"lodash/setWith\");","module.exports = require(\"lodash/toPath\");","module.exports = require(\"lodash/unset\");","module.exports = require(\"lodash/values\");","module.exports = require(\"react\");"],"sourceRoot":""}